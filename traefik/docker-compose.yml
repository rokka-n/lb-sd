version: "2"

services:
  # consul stores information about services and 
  # also does health checks defined in SERVICE_CHECK_SCRIPT below
  consul:
    image: gliderlabs/consul-server:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
    environment:
      SERVICE_53_IGNORE: 'yes'
      SERVICE_8300_IGNORE: 'yes'
      SERVICE_8301_IGNORE: 'yes'
      SERVICE_8302_IGNORE: 'yes'
      SERVICE_8400_IGNORE: 'yes'
      SERVICE_8500_IGNORE: 'yes'
      CONSUL_LOCAL_CONFIG: '{"skip_leave_on_interrupt": true}'
    command: -server -bootstrap -dev -ui -advertise 127.0.0.1
  
  # registrator adds new launched containers to the consul
  registrator:
    command: -ip $HOSTNAME consul://consul:8500 
    container_name: registrator
    image: gliderlabs/registrator:latest
    environment:
      HOSTNAME: $HOSTNAME
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    links:
      - consul

  # traefik routs requests to containers registered in consul
  # it needs to talk to consul so it can up to date routing  
  traefik:
    image: traefik
    volumes:
      - ./traefik.toml:/traefik.toml
    ports:
      - "9999:9999"
      - "9998:8080"
    environment:
      SERVICE_9999_ignore: 'yes'
      SERVICE_8080_ignore: 'yes'

  # a demo app as a backend server where traefik sends requests
  # scale it with docker-compose scale backend-app=5 
  backend-app:
    image: dockercloud/hello-world
    ports:
      - 80
    environment:
      SERVICE_80_TAGS: "traefik.frontend.entryPoints=http,traefic.frontend.host=localhost,traefik.protocol=http,traefik.enable=true;traefic.frontend.host=localhost,traefik.frontend.rule=Path:/hello"
      SERVICE_CHECK_SCRIPT: "curl --silent --fail $HOSTNAME:$$SERVICE_PORT"

  whoami-app:
    image: emilevauge/whoami
    ports:
      - 80 
    environment:
      SERVICE_80_TAGS: "traefik.frontend.entryPoints=http,traefik.protocol=http,traefik.enable=true;traefik.frontend.host=localhost,traefik.frontend.rule=Path:/whoami"
      SERVICE_CHECK_SCRIPT: "curl --silent --fail $HOSTNAME:$$SERVICE_PORT"
