version: "2"

services:
  # consul stores information about services and
  # also does health checks defined in SERVICE_CHECK_SCRIPT below
  consul:
    image: gliderlabs/consul-server:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "53:53/udp"
    environment:
      SERVICE_53_IGNORE: 'yes'
      SERVICE_8300_IGNORE: 'yes'
      SERVICE_8301_IGNORE: 'yes'
      SERVICE_8302_IGNORE: 'yes'
      SERVICE_8400_IGNORE: 'yes'
      SERVICE_8500_IGNORE: 'yes'
      CONSUL_LOCAL_CONFIG: '{"skip_leave_on_interrupt": true}'
    command: -server -bootstrap -dev -ui -advertise 127.0.0.1

  # registrator adds new launched containers to the consul
  registrator:
    command: -ip $HOSTNAME consul://consul:8500
    container_name: registrator
    image: gliderlabs/registrator:latest
    environment:
      HOSTNAME: $HOSTNAME
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    links:
      - consul

  nginx-consul:
    build: .
      # 9999 is the ingress port on LB
    ports:
      - '9999:9999'
    links:
      - consul
   
  # example services
  backend-app:
    image: tutum/hello-world
    ports:
      - 80
    environment:
      SERVICE_NAME: v1/hello
      SERVICE_TAGS: nginx
      SERVICE_CHECK_SCRIPT: "curl --silent --fail $HOSTNAME:$$SERVICE_PORT"

  whoami-app:
    image: kitematic/hello-world-nginx
    ports:
      - 80
    environment:
      SERVICE_NAME: v1/whoami
      SERVICE_TAGS: nginx
      SERVICE_CHECK_SCRIPT: "curl --silent --fail $HOSTNAME:$$SERVICE_PORT"
